name: Build ImmortalWrt-N1 66+o and 66+
on:
  repository_dispatch:
  workflow_dispatch:
  #schedule:
    #- cron: 0 23 * * *      
env:
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  FILE_NAME: openwrt_s905d_n1_66-immortalwrt&flippy

jobs:
  build:
    runs-on: ubuntu-20.04
    name: Build for ${{ matrix.flippy_name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - flippy_name: 66+o
            release_name: openwrt_s905d_n1_k5.4-66+o.img
          - flippy_name: 66+
            release_name: openwrt_s905d_n1_k5.14-66+.img
           

    env:
      FLIPPY_NAME: ${{ matrix.flippy_name }}   
      RELEASE_NAME: ${{ matrix.release_name }}
    steps:
    - name: Checkout
      uses: actions/checkout@main
      
    - name: Initialization environment
      run: |     
        version=$(curl -s "https://api.github.com/repos/0118Add/Openwrt-phicomm-n1/releases/latest" | awk -F '"' '/tag_name/{print $4}')
        
        echo "version=$version"  >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")"  >> $GITHUB_ENV
        
        sudo chmod  -R 777 /opt
        cp -r ${FLIPPY_NAME}/opt/* /opt
                
    - name: Download
      run: |
        cd /opt/kernel
        
        wget  https://github.com/0118Add/Openwrt-phicomm-n1/releases/download/$version/openwrt-armvirt-64-default-rootfs.tar.gz
                
    - name: Check Files
      run: |
        cd /opt/kernel
        ls
                
    - name: Install the package
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install xz-utils btrfs-progs gawk zip unzip curl dosfstools  uuid-runtime
        sudo -E apt-get -qq install git  git-core
        sudo -E apt-get -qq install pigz
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
    
    - name: build img
      run: |
        sudo chmod  -R 777 /opt
        mkdir  /opt/kernel/tmp
        sudo mount -t tmpfs  none  /opt/kernel/tmp
        cd /opt/kernel
        #sudo chmod +x *.sh
        sudo ./mk_s905d_n1.sh
        
#    - name: copy update files
#      run: |
#        cd /opt/kernel
#        sudo cp files/update-amlogic-openwrt.sh tmp/update-amlogic-openwrt.sh    
    
    - name: pigz -9
      id: pigz
      run: |
        sudo chmod -R 777 /opt/kernel/output
        cd /opt/kernel/output
        sudo pigz -9 -p 2 -k *
        
        echo "::set-output name=status::success"
                
    - name: Check Files4
      run: |
        cd /opt/kernel/output
        ls
    
    - name: 编译后硬盘容量
      if: (!cancelled())
      run: df -hT
      
    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd /opt/kernel/output
        rm -rf openwrt_s905d_n1_R21.10.1_k5.14.14-flippy-66+.img openwrt_s905d_n1_R21.10.1_k5.4.155-flippy-66+o.img
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"
        
    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
        
    - name: Create release
      id: release
      uses: ncipollo/release-action@v1
      with:
        name: R${{ env.DATE }} for ${{ env.FILE_NAME }}
        allowUpdates: true
        tag: ${{ env.FILE_NAME }}
        commit: main
        token: ${{ secrets.RELEASES_TOKEN }}
        body: |
          ## 以下为N1-ImmortalWrt源码最新固件（每日上午7时自动编译打包最新固件）
          默认IP：192.168.1.10 默认密码： password
 
          N1升级方法：
            一：晶晨宝盒升级
            二：手动升级
              1.cd /mnt/mmcblk2p4
              2.wget【空格】tar.gz右键复制的releases里的固件下载连接
              3.输入 openwrt-update-amlogic 升级系统
        artifacts: ${{ env.FIRMWARE }}/*
        
    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3
        
    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
